name: Upload Python Package

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        # see details (matrix, python-version, python-version-file, etc.)
        # https://github.com/actions/setup-python
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install --only test
      - name: Run the automated tests
        run: poetry run pytest -v

  publish:
    if: github.event.pull_request.merged == true

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Mark github workspace as safe
        run: |
          git config --global --add safe.directory '*'
      - name: Run tests
        run: poetry run pytest --cov=./ --cov-report=xml
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}